JAVA : - 

public class Solution {
    public int minimumPushes(String word) {
        Map<Character, Integer> charCountMap = new HashMap<>();
        
        for (char c : word.toCharArray()) {
            charCountMap.put(c, charCountMap.getOrDefault(c, 0) + 1);
        }

        List<Integer> frequencies = new ArrayList<>(charCountMap.values());
        Collections.sort(frequencies, Collections.reverseOrder());

        int row = 1;
        int ans = 0;

        for (int i = 0; i < frequencies.size(); i++) {
            if (i > 7 && i % 8 == 0) {
                row++;
            }
            ans += row * frequencies.get(i);
        }

        return ans;
    }
}

C++ : - 

class Solution {
public:
    int minimumPushes(string word) {
        map<char,int>m;

        for(char c:word){
            m[c]++;
        }

        vector<int>v;
        for(auto i : m){
            v.push_back(i.second);
        }

        sort(v.begin(), v.end(), greater<int>());
        

        int row = 1;
        int ans = 0;

        for(int i = 0 ; i< v.size(); i++){
            if(i > 7 && i%8 == 0 ){
                row++;
            }

            ans+= row * v[i];
        }

        return ans;
        
    }
};

